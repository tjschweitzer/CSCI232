import java.util.Comparator;

public class BinarySearchDeluxe {

    // Returns the index of the first key in a[] that equals the search key, or -1 if no such key.
    public static <Key> int firstIndexOf(Key[] a, Key key, Comparator<Key> comparator) {
        //Todo: if check for null
        int lowVal = 0; //sets low to start of the array
        int highVal = a.length - 1; // sets high to start of array
        int middleVal; // initiates the middle value to be calculated at the start of each loop

        while (highVal> lowVal ) {
            middleVal = ((lowVal - highVal)/2)+lowVal;
            if (comparator.compare(key, a[middleVal])<0 || comparator.compare(a[middleVal-1], a[middleVal])==0) { 
                //value is not in the top half of range
                highVal=middleVal;
            }else if (comparator.compare(key, a[middleVal])>0) { // value is not in bottom half of range
                lowVal=middleVal;
            }else if (comparator.compare(a[middleVal-1], a[middleVal])==0) { // if middle and left of middle are equal
                
            }else    {
                return middleVal;
            }
            
            
        }
        return -11;
    }

    // Returns the index of the last key in a[] that equals the search key, or -1 if no such key.
    public static <Key> int lastIndexOf(Key[] a, Key key, Comparator<Key> comparator) {
        //Todo: if check for null
        int lowVal = 0; //sets low to start of the array
        int highVal = a.length - 1; // sets high to start of array
        int middleVal; // initiates the middle value to be calculated at the start of each loop

        while (highVal> lowVal ) {
            middleVal = ((lowVal - highVal)/2)+lowVal;
            if (comparator.compare(key, a[middleVal])<0) { //value is not in the top half of range
                highVal=middleVal;
            }else if (comparator.compare(key, a[middleVal])>0) { // value is not in bottom half of range
                lowVal=middleVal;
            }else {
                return middleVal;
            }
            
            
        }
        return -11;
    }

    // unit testing (you should have some Unit Testing here to confirm that your methods work)
    public static void main(String[] args)   {
        
    }
}